#! python

def build(ctx):

    # ctx(
    #     features="run_py_script",
    #     source="bootstrap_plot.py",
    #     deps=[
    #         ctx.path_to(ctx, "OUT_ANALYSIS", "bootstrap_mae.csv"),
    #         ctx.path_to(ctx, "IN_ANALYSIS", "bootstrap.py"),
    #     ],
    #     target=[
    #         ctx.path_to(ctx, "OUT_FIGURES", "bootstrap_mae.pdf")
    #     ],
    #     name="boostrap_plot",
    # )

    # ctx(
    #     features="run_py_script",
    #     source="ridge_variable_selection_plot.py",
    #     deps=[
    #         ctx.path_to(ctx, "OUT_ANALYSIS", "variable_selection.pkl"),
    #     ],
    #     target=[
    #         ctx.path_to(ctx, "OUT_FIGURES", "ridge_variable_selection.pdf")
    #     ],
    #     name="ridge_variable_selection_plot",
    # )

    import json

    # select simulation models for which we run the analysis
    with open("src/models_to_run.json") as handle:
        models_to_run = json.loads(handle.read())["models"]

    # fit models
    for model in models_to_run:

        ctx(
            features="run_py_script",
            source="create_loss_data_frame.py",
            deps=[
                ctx.path_to(ctx, "OUT_ANALYSIS", f"{model}/losses.csv"),
            ],
            target=[
                ctx.path_to(ctx, "OUT_FINAL", f"{model}-losses_tidy.csv")
            ],
            name="create_loss_data_frame",
            append=model,
        )

        ctx(
            features="run_py_script",
            source="mae_plot.py",
            deps=[
                ctx.path_to(ctx, "IN_FINAL", "create_loss_data_frame.py"),
                ctx.path_to(ctx, "OUT_FINAL", f"{model}-losses_tidy.csv")
            ],
            target=[
                ctx.path_to(ctx, "OUT_FIGURES", f"{model}-mae_plot.png")
            ],
            name="mae_plot",
            append=model,
        )

    # model_names = load_implemented_model_names()
    # ctx(
    #     features="run_py_script",
    #     source="create_loss_latex_tables.py",
    #     deps=[
    #         ctx.path_to(ctx, "OUT_FINAL", "losses_mae_tidy.csv")
    #     ],
    #     target=[
    #         ctx.path_to(ctx, "OUT_TABLES", f"mae_{model}.tex") for model in model_names
    #     ],
    #     name="create_loss_latex_tables",
    # )

    # ctx(
    #     features="run_py_script",
    #     source="move_to_cloud.py",
    #     deps=[
    #         ctx.path_to(ctx, "OUT_DATA", "df_validation.pkl"),
    #         ctx.path_to(ctx, "OUT_DATA", "df_training.pkl"),
    #         ctx.path_to(ctx, "OUT_ANALYSIS", "df_prediction.pkl"),
    #         ctx.path_to(ctx, "OUT_FIGURES", "bootstrap_mae.pdf"),
    #         ctx.path_to(ctx, "OUT_FIGURES", "ridge_variable_selection.pdf"),
    #         ctx.path_to(ctx, "OUT_ANALYSIS", "losses.csv"),
    #         ctx.path_to(ctx, "OUT_FINAL", "losses_mae_tidy.csv"),
    #         ctx.path_to(ctx, "OUT_FIGURES", "mae_plot.pdf"),
    #     ] + [
    #         ctx.path_to(ctx, "OUT_TABLES", f"mae_{model}.tex") for model in model_names
    #     ],
    #     name="move_to_cloud",
    # )

    from src.final.project_dependency_graph import make_project_dependency_graph

    ctx.add_post_fun(make_project_dependency_graph)
