#! python

from src.auxiliary.auxiliary import load_surrogates_specs


def build(ctx):

    specs = load_surrogates_specs()
    models = specs.keys()

    # fit
    ctx(
        features="run_py_script",
        source="fit.py",
        deps=[
            ctx.path_to(ctx, "OUT_DATA", "data_train.pkl"),
            ctx.path_to(ctx, "OUT_DATA", "sorted_features.csv"),
            ctx.path_to(ctx, "IN_MODEL_CODE", "linearregression.py"),
            ctx.path_to(ctx, "IN_MODEL_CODE", "polynomialregression.py"),
            ctx.path_to(ctx, "IN_MODEL_CODE", "ridgeregression.py"),
            ctx.path_to(ctx, "IN_MODEL_SPECS", "params_fit.json")
        ],
        target=[
            ctx.path_to(ctx, "OUT_ANALYSIS", model + ".csv") for model in models
        ],
        name="fit",
    )

    # predict
    ctx(
        features="run_py_script",
        source="predict.py",
        deps=[ctx.path_to(ctx, "OUT_DATA", "data_test.pkl")] + [
            ctx.path_to(ctx, "OUT_ANALYSIS", model + ".csv") for model in models
        ] + [
            ctx.path_to(ctx, "IN_ANALYSIS", "fit.py")
        ],
        target=[
            ctx.path_to(ctx, "OUT_DATA", "predictions.pkl"),
        ],
        name="predict",
    )

    # evaluate
    ctx(
        features="run_py_script",
        source="evaluate.py",
        deps=[
            ctx.path_to(ctx, "OUT_DATA", "predictions.pkl"),
            ctx.path_to(ctx, "IN_ANALYSIS", "fit.py"),
        ],
        target=[
            ctx.path_to(ctx, "OUT_DATA", "losses.csv"),
        ],
        name="evaluate",
    )

    # bootstrap
    # ctx(
    #     features="run_py_script",
    #     source="bootstrap.py",
    #     deps=[
    #         ctx.path_to(ctx, "OUT_DATA", "data_train.pkl"),
    #         ctx.path_to(ctx, "OUT_DATA", "data_test.pkl"),
    #         ctx.path_to(ctx, "IN_MODEL_CODE", "polynomialregression.py"),
    #         ctx.path_to(ctx, "IN_MODEL_CODE", "ridgeregression.py"),
    #         ctx.path_to(ctx, "IN_MODEL_SPECS", "params_fit.json")
    #     ],
    #     target=[
    #         ctx.path_to(ctx, "OUT_ANALYSIS", "bootstrap_mae_" + model + ".csv") for model in ['polynomial', 'ridge']
    #     ],
    #     name="bootstrap",
    # )
